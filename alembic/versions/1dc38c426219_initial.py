"""initial

Revision ID: 1dc38c426219
Revises: 
Create Date: 2025-08-11 22:30:44.922181

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '1dc38c426219'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('books',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=500), nullable=False),
    sa.Column('author', sa.String(length=255), nullable=False),
    sa.Column('isbn', sa.String(length=13), nullable=False),
    sa.Column('genre', sa.String(length=100), nullable=True),
    sa.Column('published_date', sa.Date(), nullable=True),
    sa.Column('public_rating', sa.Float(), nullable=True),
    sa.Column('description', sa.String(length=2000), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_books_author'), 'books', ['author'], unique=False)
    op.create_index(op.f('ix_books_genre'), 'books', ['genre'], unique=False)
    op.create_index(op.f('ix_books_id'), 'books', ['id'], unique=False)
    op.create_index(op.f('ix_books_isbn'), 'books', ['isbn'], unique=True)
    op.create_index(op.f('ix_books_title'), 'books', ['title'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('bookshelves',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('book_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('personal_rating', sa.Integer(), nullable=True),
    sa.Column('review', sa.String(length=2000), nullable=True),
    sa.Column('date_added', sa.DateTime(), nullable=True),
    sa.CheckConstraint("status IN ('to_read', 'reading', 'read', 'abandoned')", name='check_status_values'),
    sa.CheckConstraint('personal_rating >= 1 AND personal_rating <= 5', name='check_rating_range'),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_bookshelves_book_id'), 'bookshelves', ['book_id'], unique=False)
    op.create_index(op.f('ix_bookshelves_id'), 'bookshelves', ['id'], unique=False)
    op.create_index(op.f('ix_bookshelves_status'), 'bookshelves', ['status'], unique=False)
    op.create_index(op.f('ix_bookshelves_user_id'), 'bookshelves', ['user_id'], unique=False)
    op.create_table('reading_lists',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('list_name', sa.String(length=255), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_reading_lists_id'), 'reading_lists', ['id'], unique=False)
    op.create_index(op.f('ix_reading_lists_list_name'), 'reading_lists', ['list_name'], unique=False)
    op.create_index(op.f('ix_reading_lists_user_id'), 'reading_lists', ['user_id'], unique=False)
    op.create_table('reading_list_books',
    sa.Column('reading_list_id', sa.Integer(), nullable=False),
    sa.Column('book_id', sa.Integer(), nullable=False),
    sa.Column('date_added', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], ),
    sa.ForeignKeyConstraint(['reading_list_id'], ['reading_lists.id'], ),
    sa.PrimaryKeyConstraint('reading_list_id', 'book_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('reading_list_books')
    op.drop_index(op.f('ix_reading_lists_user_id'), table_name='reading_lists')
    op.drop_index(op.f('ix_reading_lists_list_name'), table_name='reading_lists')
    op.drop_index(op.f('ix_reading_lists_id'), table_name='reading_lists')
    op.drop_table('reading_lists')
    op.drop_index(op.f('ix_bookshelves_user_id'), table_name='bookshelves')
    op.drop_index(op.f('ix_bookshelves_status'), table_name='bookshelves')
    op.drop_index(op.f('ix_bookshelves_id'), table_name='bookshelves')
    op.drop_index(op.f('ix_bookshelves_book_id'), table_name='bookshelves')
    op.drop_table('bookshelves')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_books_title'), table_name='books')
    op.drop_index(op.f('ix_books_isbn'), table_name='books')
    op.drop_index(op.f('ix_books_id'), table_name='books')
    op.drop_index(op.f('ix_books_genre'), table_name='books')
    op.drop_index(op.f('ix_books_author'), table_name='books')
    op.drop_table('books')
    # ### end Alembic commands ###
